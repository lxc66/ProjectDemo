<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-lazy-init="true">

	<description>Spring公共配置文件</description>
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="*" />

	<!-- 数据源配置,在测试环境使用单连接 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:springside-core-test" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<!-- Hibernate配置 -->
  	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
    	<property name="dataSource" ref="dataSource"/>
<!--     	<property name="packagesToScan"> -->
<!-- 			<list> -->
<!-- 				<value>com.unitever</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/jzsoft/**/model/hbm</value>
			</list>
		</property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
<!--                 <prop key="hibernate.hbm2ddl.auto">none</prop> -->
            </props>
        </property>
  	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<bean id="springContextHolder" class="com.jzsoft.platform.core.spring.SpringContextHolder" lazy-init="false" />
	
	<bean id="jdbcHelper" class="com.jzsoft.platform.core.dao.JdbcHelper">
		<property name="jdbcTemplate">
			<bean class="org.springframework.jdbc.core.JdbcTemplate">
				<constructor-arg index="0" ref="dataSource"/>
				<property name="queryTimeout" value="#{T(com.jzsoft.platform.core.dao.JdbcConstants).QUERY_TIMEOUT}"/>
			</bean>
		</property>
		<property name="namedParameterJdbcTemplate">
			<bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
				<constructor-arg index="0" ref="dataSource"/>
			</bean>
		</property>
	</bean>
	
	<!-- Session工厂 -->  
    <bean id="sqlSessionFactory" class="com.jzsoft.platform.core.mybatis.MybatisSqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- mybatis配置文件 -->  
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="mapperLocations"  value="classpath*:com/jzsoft/**/dao/manual/*Dao.xml"/>
		<property name="typeAliasesPackage" value="com.jzsoft.**.model" />  
    </bean>  
      
	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
		<property name="basePackage" value="com.jzsoft.**.dao.auto" />
	</bean>
      
    <!-- 配置SqlSessionTemplate -->    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">    
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean> 
    <bean id="batchSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">    
        <constructor-arg index="0" ref="sqlSessionFactory" />    
        <constructor-arg index="1" value="BATCH"/>    
    </bean> 
</beans>