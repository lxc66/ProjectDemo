<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>mapperxmlSub</name>
	<filePath>src/main/resources/mapper/gencode</filePath>
	<filePath2>src/main/resources/com/leimingtech/service/module/${moduleName}/dao/mapper</filePath2>
	<fileName>${ClassName}Mapper.xml</fileName>
	<content><![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<#if type==1>
<mapper namespace="${packageName}.dao.mapper.${ClassName}Mapper">
<#elseif type==2>
<mapper namespace="com.jzsoft.service.module.${moduleName}.dao.mapper.${ClassName}Mapper">
</#if>
	
<#if type==1>
	<resultMap id="BaseResultMap" type="${packageName}.entity.${ClassName}">
<#elseif type==2>
	<resultMap id="BaseResultMap" type="com.jzsoft.core.entity.base.${ClassName}">
</#if>
	<#list table.columnList as c>
		<result column="${c.name}" property="${c.javaFieldId}" jdbcType="${c.myBatisJdbcType}" />
	</#list>
	</resultMap>
    
	<sql id="Base_Column_List">
		<#assign columnField>
			<#list table.columnList as c>
		${c.name},
			</#list>
			<#--
			<#list table.columnList as c>
			-->
				<#-- 父表关联字段 -->
			<#--
				<#if table.parentExists && table.parentTableFk == c.name>
					<#list c.javaFieldAttrs as a>
		b.${a[1]} AS "${c.simpleJavaField}.${a[0]}",
					</#list>
				</#if>
			</#list>
			-->
		</#assign>
${columnField?substring(0, columnField?last_index_of(","))}
	</sql>
	
	<sql id="whereStatement">
		<where>
			1 = 1
			<if test="condition !=null">
			<#list table.columnList as c>
				<#if (c.isQuery?? && c.isQuery == 1) || (table.parentExists && table.parentTableFk == c.name)>
					<#if c.queryType ?? && c.queryType == 'between'>
			<if test="begin${c.simpleJavaField?cap_first} != null and end${c.simpleJavaField?cap_first} != null <#if c.simpleJavaField != c.javaFieldId>and begin${c.javaFieldId?cap_first} != null and end${c.javaFieldId?cap_first} != null </#if>and begin${c.javaFieldId?cap_first} != '' and end${c.javaFieldId?cap_first} != ''">
					<#else>
			<if test="condition.${c.simpleJavaField} != null<#if c.simpleJavaField != c.javaFieldId> and ${c.javaFieldId} != null</#if> and condition.${c.javaFieldId} != ''">
					</#if>
					<#if c.queryType ?? && c.queryType == 'between'>
				AND a.${c.name} BETWEEN ${"#"}{begin${c.simpleJavaField?cap_first}} AND ${"#"}{end${c.simpleJavaField?cap_first}}
					<#elseif c.queryType ?? && c.queryType == 'like'>
				AND ${c.name} LIKE 
					<if test="dbName == 'oracle'">'%'||${"#"}{condition.${c.javaFieldId}}||'%'</if>
					<if test="dbName == 'mssql'">'%'+${"#"}{condition.${c.javaFieldId}}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',${"#"}{condition.${c.javaFieldId}},'%')</if>
					<#elseif c.queryType ?? && c.queryType == 'left_like'>
				AND ${c.name} LIKE 
					<if test="dbName == 'oracle'">'%'||${"#"}{condition.${c.javaFieldId}}</if>
					<if test="dbName == 'mssql'">'%'+${"#"}{condition.${c.javaFieldId}}</if>
					<if test="dbName == 'mysql'">concat('%',${"#"}{condition.${c.javaFieldId}})</if>
					<#elseif c.queryType ?? && c.queryType == 'right_like'>
				AND ${c.name} LIKE 
					<if test="dbName == 'oracle'">${"#"}{condition.${c.javaFieldId}}||'%'</if>
					<if test="dbName == 'mssql'">${"#"}{condition.${c.javaFieldId}}+'%'</if>
					<if test="dbName == 'mysql'">concat(${"#"}{condition.${c.javaFieldId}},'%')</if>
					<#else>
				AND ${c.name} ${c.queryType} ${"#"}{condition.${c.javaFieldId}}
					</#if>
			</if>
				</#if>
			</#list>
			</if>
		</where>
	</sql>
	
	<select id="find${ClassName}PagerList" resultMap="BaseResultMap"
		parameterType="com.jzsoft.service.utils.page.Pager">
		
		select c.* from ${table.name} c
		<include refid="whereStatement" />
		
		<if test="orderBy == 0">
			order by id desc
		</if>
		<if test="orderBy == 1">
			order by id asc
		</if>
		
	</select>
	
	<select id="find${ClassName}AllList" resultMap="BaseResultMap"
<#if type==1>
		parameterType="${packageName}.entity.${ClassName}">
<#elseif type==2>
		parameterType="com.jzsoft.core.entity.base.${ClassName}">
</#if>
		SELECT
		<include refid="Base_Column_List" />
		from ${table.name} c
		<if test="orderBy == 0">
			order by id desc
		</if>
		<if test="orderBy == 1">
			order by id asc
		</if>
	</select>
	
	<select id="find${ClassName}By${table.javaPrimaryKey?cap_first}" resultMap="BaseResultMap" parameterType="java.lang.String">

		select
		<include refid="Base_Column_List" />
		from ${table.name} c where ${table.dbPrimaryKey} = ${"#"}{${table.javaPrimaryKey}}

	</select>
	
	<delete id="delete${ClassName}By${table.javaPrimaryKey?cap_first}" parameterType="java.lang.String">
		delete from
		${table.name} where ${table.dbPrimaryKey} = ${"#"}{${table.javaPrimaryKey}}
	</delete>
	
	<delete id="delete${ClassName}By${table.parentTableFk?cap_first}" parameterType="java.lang.String">
		delete from
		${table.name} where ${table.parentTableFk} = ${"#"}{${table.parentTableFk}}
	</delete>
	
<#if type==1>
	<insert id="save${ClassName}" parameterType="${packageName}.entity.${ClassName}">
<#elseif type==2>
	<insert id="save${ClassName}" parameterType="com.jzsoft.core.entity.base.${ClassName}">
</#if>

		insert into ${table.name}

		<trim prefix="(" suffix=")" suffixOverrides=",">

			<#list table.columnList as c>
				<#if c.isInsert?? && c.isInsert == 1>
			<if test="${c.javaFieldId} != null <#if c.javaType=='String'>and ${c.javaFieldId} != ''</#if>">
			${c.name},
			</if>
				</#if>
			</#list>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<#list table.columnList as c>
				<#if c.isInsert?? && c.isInsert == 1>
			<if test="${c.javaFieldId} != null <#if c.javaType=='String'>and ${c.javaFieldId} != ''</#if>">
				${"#"}{${c.javaFieldId}},
			</if>
				</#if>
			</#list>
		</trim>

	</insert>
	
<#if type==1>
	<update id="update${ClassName}" parameterType="${packageName}.entity.${ClassName}">
<#elseif type==2>
	<update id="update${ClassName}" parameterType="com.jzsoft.core.entity.base.${ClassName}">
</#if>

		update ${table.name}
		<set>
				<#list table.columnList as c>
					<#if c.isEdit?? && c.isEdit == 1>
			<if test="${c.javaFieldId} != null <#if c.javaType=='String'>and ${c.javaFieldId} != ''</#if>">
				${c.name} = ${"#"}{${c.javaFieldId}},
			</if>
					</#if>
				</#list>
		</set>

		WHERE ${table.dbPrimaryKey} = ${"#"}{${table.javaPrimaryKey}}

	</update>
	
</mapper>]]>
	</content>
</template>