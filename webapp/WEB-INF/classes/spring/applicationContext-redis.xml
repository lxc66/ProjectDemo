<?xml version="1.0" encoding="UTF-8"?>  
<beans    xmlns="http://www.springframework.org/schema/beans"   
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
           xmlns:p="http://www.springframework.org/schema/p"   
           xmlns:tx="http://www.springframework.org/schema/tx"  
           xmlns:context="http://www.springframework.org/schema/context"  
           xsi:schemaLocation="  
            http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context-3.0.xsd  
               ">  

    <!-- 引入jedis配置文件  如果你有多个数据源需要通过<context:property-placeholder管理，且不愿意放在一个配置文件里，那么一定要加上ignore-unresolvable=“true" -->
    <context:property-placeholder location="classpath:conf/redis.properties"
       ignore-unresolvable="true" />
    <!-- redis连接池 -->  
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">   
			<!-- 最大连接数 -->
	        <property name="maxTotal" value="${redis.pool.maxActive}" />
	        <!-- 最大空闲连接数 -->
	        <property name="maxIdle" value="${redis.pool.maxIdle}" />
	        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
	        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
	        <!-- 在获取连接的时候检查有效性, 默认false -->
	        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	        <!-- 每次释放连接的最大数目 -->
<!-- 	        <property name="numTestsPerEvictionRun" value="1024" /> -->
	        <!-- 释放连接的扫描间隔（毫秒） -->
<!-- 	        <property name="timeBetweenEvictionRunsMillis" value="30000" /> -->
	        <!-- 连接最小空闲时间 -->
<!-- 	        <property name="minEvictableIdleTimeMillis" value="1800000" /> -->
	        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
<!-- 	        <property name="softMinEvictableIdleTimeMillis" value="10000" /> -->
	        <!-- 在空闲时检查有效性, 默认false -->
<!-- 	        <property name="testWhileIdle" value="true" /> -->
	        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
<!-- 	        <property name="blockWhenExhausted" value="false" /> -->
	    </bean>  

		 <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton" > 
		        <constructor-arg index="0" ref="jedisPoolConfig" />
		        <constructor-arg index="1">
		            <list>
<!-- 		                <bean name="slaver" class="redis.clients.jedis.JedisShardInfo">   -->
<!-- 		                    <constructor-arg index="0" value="${redis.slaver.host}" />   -->
<!-- 		                    <constructor-arg index="1" value="${redis.slaver.port}" type="int" />   -->
<!-- 		                </bean>   -->
		                <bean name="master" class="redis.clients.jedis.JedisShardInfo">   
		                    <constructor-arg index="0" value="${redis.master.host}" />   
		                    <constructor-arg  index="1" value="${redis.master.port}" type="int" />   
		                </bean>   
		            </list>
		        </constructor-arg>
		 </bean>
<!-- 	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy"> -->
<!--         <constructor-arg ref="jedisPoolConfig"/>  -->
<!--         <constructor-arg> -->
<!-- 　　　　　　如果以后需要扩展集群，只需要复制一份redis,修改端口，然后在这里配置即可 -->
<!--             <list>  -->
<!--             <bean class="redis.clients.jedis.JedisShardInfo">  -->
<!--                 <constructor-arg index="0" value="127.0.0.1"/> -->
<!--                 <constructor-arg index="1" value="6379"/> -->
<!--                 <constructor-arg index="2" value="instance:01"/> -->
<!--             </bean> -->
<!--             <bean class="redis.clients.jedis.JedisShardInfo"> -->
<!--                 <constructor-arg index="0" value="127.0.0.1"/> -->
<!--                 <constructor-arg index="1" value="6380"/> -->
<!--                 <constructor-arg index="2" value="instance:02"/> -->
<!--             </bean>  -->
<!--             <bean class="redis.clients.jedis.JedisShardInfo"> -->
<!--                 <constructor-arg index="0" value="127.0.0.1"/> -->
<!--                 <constructor-arg index="1" value="6381"/> -->
<!--                 <constructor-arg index="2" value="instance:03"/> -->
<!--             </bean> -->
<!--             </list> -->
<!--         </constructor-arg> -->
<!--         </bean> -->

		 <!--java帮我们同步sentinel的信息，将主从信息同步到客户端来-->
<!--       <bean class="redis.clients.jedis.JedisSentinelPool"> -->
<!--         <constructor-arg index="0" value="mymaster"/> -->
<!--         <constructor-arg index="1"> -->
<!--             <set> -->
<!--                 <value>127.0.0.1:26379</value> -->
<!--             </set> -->
<!--         </constructor-arg> -->
<!--         <constructor-arg index="2" ref="jedisPoolConfig"/> -->
<!--     </bean> -->
    
</beans>   
